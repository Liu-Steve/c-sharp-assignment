import requests
import json
import time


bus = [287, 520, 521, 725, 740, 810]
bus_num = bus.__len__()
bus_len = []
bus_json = []
xs = []
ys = []
x_str = ''
y_str = ''


for i in range(bus_num):

    with open('./BusHelper/wwwroot/json/bus{}.json'.format(bus[i]), 'r', encoding='utf-8') as f:
        ret_dic = json.load(f)
        bus_json.append(ret_dic)
        x_str = bus_json[i]['data']['busline_list'][0]['xs'].split(',')
        y_str = bus_json[i]['data']['busline_list'][0]['ys'].split(',')
        xs.append(list(map(lambda x: float(x), x_str)))
        ys.append(list(map(lambda y: float(y), y_str)))
        bus_len.append(xs[i].__len__())


urlAdd = "https://localhost:7198/BusInfo/AddBus"

headers = {
    "Content-Type": "application/json; charset=UTF-8",
    'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_4) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/80.0.3987.163 Safari/537.36'
}

busIDs = []

for i in range(bus_num):

    dataAdd = {"x": xs[i][0], "y": ys[i][0]}
    res = requests.post(url=urlAdd, headers=headers,
                        data=json.dumps(dataAdd), verify=False)
    busIDs.append(res.text)


#xs = [114.394524,114.394875,114.395073,114.395493,114.39637,114.39682,114.397278,114.39798,114.398499,114.399025,114.399628,114.399666,114.39994,114.400345,114.400343,114.400612,114.401389,114.401988,114.402222,114.402548,114.402817,114.403164,114.403372,114.403624,114.403997,114.404644,114.405608,114.405608,114.406209,114.406169,114.406168,114.40714,114.407179,114.407587,114.407821,114.408056,114.408181,114.408229,114.40826,114.40826,114.408251,114.408177,114.408121,114.408051,114.408225,114.408411,114.408477,114.40852,114.408568,114.408581,114.40865,114.40865,114.408668,114.40875,114.408754,114.408828,114.408893,114.409067,114.409123,114.409206,114.409301,114.409323,114.409206,114.409214,114.409301,114.40934,114.409397,114.409444,114.409475,114.409527,114.409566,114.409657,114.409809,114.409848,114.4099,114.409761,114.409319,114.40908,114.408824,114.408003,114.404102,114.403255,114.40319,114.402661,114.402122,114.401345,114.401168,114.40036,114.399201,114.397956,114.397661,114.397157,114.397041,114.396701,114.396632,114.396202,114.395955,114.395825,114.395725,114.395655,114.395621,114.395638,114.395655,114.395681,114.395712,114.395729,114.395729,114.39576,114.39576,114.39582,114.395825,114.395868,114.395868,114.395929,114.395946,114.395946,114.395951,114.395981,114.396155,114.396233,114.396415,114.396563,114.396584,114.396827,114.396849,114.397044,114.397263,114.397266,114.397326,114.397418,114.39753,114.397708,114.397743,114.397956,114.397977,114.398186,114.398229,114.398277,114.39832,114.398455,114.398516,114.398542,114.398598,114.398711,114.398819,114.398902,114.398963,114.399023,114.399045,114.39911,114.39911,114.399141,114.399236,114.399314,114.399431,114.399583,114.399714,114.399887,114.399957,114.399978,114.400026,114.40003,114.400004,114.399974,114.399935,114.399874,114.399727,114.399562,114.39941,114.399223,114.398984,114.398872,114.398711,114.398641,114.398585,114.397956,114.397409,114.396701,114.39638,114.396181,114.395755,114.395547,114.395135,114.394167,114.394023,114.393993,114.393741,114.393372,114.392778,114.39138,114.390616,114.390442,114.390443,114.390404,114.389978,114.389996,114.389648,114.389167,114.388333,114.387526,114.387027,114.386723,114.386385,114.386046,114.38579,114.38497,114.384544,114.384444,114.384431,114.383572,114.382925,114.381845,114.381866,114.381766,114.380959,114.380534,114.380226,114.377526,114.377496,114.376823,114.376454,114.375664,114.375126,114.374905,114.373602,114.372756,114.372222,114.371866,114.37079,114.370625,114.370152,114.370022,114.369605,114.369319,114.369145,114.368793,114.368082,114.367964,114.367743,114.367674,114.36763,114.367405,114.367057,114.366393,114.365855,114.365625,114.365438,114.364839,114.364488,114.364006,114.363754,114.363451,114.363034,114.362856,114.362227,114.361832,114.361385,114.361315,114.361254,114.36076,114.360369,114.359345,114.358082,114.357609,114.357474,114.356102,114.355668,114.35526,114.354423,114.354266,114.353845,114.353707,114.353655,114.353893,114.353997,114.35444,114.354644,114.354935,114.355122,114.355143,114.355195,114.355239,114.355356,114.355391,114.355668,114.355851,114.35599,114.356081,114.356224,114.356128,114.355781,114.354258,114.353507,114.353307,114.353008,114.351832,114.351502,114.351319,114.350734,114.350191,114.348511,114.348307,114.347561,114.347279,114.346159,114.345946,114.345699,114.3451,114.344536,114.344236,114.344015,114.343685,114.343559,114.343416,114.343307,114.343212,114.343142,114.342448,114.341875,114.341758,114.341671,114.341215,114.341033,114.341332,114.34182,114.34217,114.342487,114.342665,114.342786,114.342799,114.342826,114.342873,114.343073,114.343095,114.343099,114.34319,114.343234,114.343264,114.34339,114.343459,114.343459,114.343576,114.343733,114.343785,114.343789,114.343789,114.343741,114.343737,114.343685,114.343668,114.343641,114.343602,114.34375,114.343932,114.343958,114.343989,114.343989,114.344097,114.344184,114.344236,114.344297,114.344431,114.344592,114.344809,114.345204,114.345282,114.345343,114.345621,114.345699,114.345868,114.345959,114.346215,114.346285,114.346788,114.346897,114.34697,114.347031,114.347075,114.347691,114.348646,114.348685,114.348832,114.348845,114.349119,114.349345,114.350082,114.350512,114.351719,114.351962,114.352196,114.352378,114.353238,114.353672,114.353997,114.354596,114.354944,114.355469,114.355786,114.355959,114.356263,114.356471,114.35681,114.356957,114.357131,114.35737,114.357483,114.357582,114.357669,114.358194,114.358359,114.358472,114.358559,114.358641,114.358754,114.359375,114.359991,114.360195,114.360352,114.360391,114.360391,114.36053,114.360556,114.360642,114.360677,114.360738,114.360851,114.360985,114.361172,114.36128,114.361489,114.361871,114.361918,114.362448,114.363073,114.363451,114.363602,114.364032,114.36434,114.364605,114.364761,114.36503,114.365104,114.365104,114.365313,114.36576,114.366111,114.366489,114.366541,114.366745,114.367422,114.367674,114.368416,114.368507,114.368507,114.368507,114.369858,114.370056,114.37027,114.370483,114.370628,114.371117,114.371201,114.371544,114.371742,114.372238,114.372314,114.372375,114.372429,114.37249,114.372612,114.372673,114.372704,114.372726,114.372719,114.372696,114.37262,114.372536,114.372406,114.372353,114.372299,114.371422,114.371201,114.371025,114.370895,114.370796,114.370621,114.370377,114.370354,114.370178,114.369812,114.369384,114.368806,114.368767,114.368377,114.367938,114.367674,114.367018,114.366645,114.366454,114.366159,114.365803,114.365629,114.365577,114.3652,114.365117,114.36503,114.364874,114.364757,114.363694,114.363429,114.363281,114.363177,114.363038,114.36299,114.362904,114.362895,114.362839,114.36283,114.362847,114.362995,114.362995,114.363108,114.363286,114.363449,114.36401,114.364258,114.364431,114.364631,114.364905,114.364996,114.365447,114.36549,114.365564,114.366332,114.366532,114.366615,114.367031,114.367127,114.367174,114.367218,114.367674,114.36928,114.369545,114.369545,114.369675,114.369728,114.369797,114.370255,114.370407,114.370659,114.370888,114.370895,114.370888,114.37159,114.371643,114.371689,114.371353,114.371086,114.37088,114.370603,114.37043,114.369922,114.369201,114.369631,114.370951,114.371419,114.372027,114.372023,114.372743,114.372804,114.373281,114.373941,114.374262,114.374605,114.375313,114.375443,114.375751,114.376063,114.377157,114.378003,114.378082,114.378177,114.378785,114.379588,114.380538,114.38056,114.38056,114.380764,114.382027,114.382283,114.382365,114.382765,114.383138,114.383898,114.384809,114.384922]
#ys = [30.458662,30.458616,30.45857,30.458481,30.458252,30.458107,30.45796,30.45775,30.457596,30.457445,30.457258,30.457249,30.457167,30.457048,30.457049,30.45697,30.456727,30.456541,30.456437,30.456293,30.456628,30.457049,30.457309,30.457595,30.458021,30.45878,30.459978,30.459974,30.46072,30.46084,30.460838,30.462053,30.462105,30.462435,30.462522,30.462665,30.462786,30.462865,30.462938,30.46306,30.463112,30.463251,30.463312,30.463359,30.463728,30.464201,30.464401,30.464631,30.465087,30.465334,30.466237,30.466233,30.466458,30.467474,30.467539,30.468051,30.468971,30.471432,30.472101,30.472739,30.473637,30.473819,30.473898,30.473963,30.474679,30.47497,30.475408,30.475877,30.476072,30.476441,30.476701,30.477374,30.47849,30.478802,30.47921,30.479301,30.479332,30.479358,30.479388,30.479462,30.479826,30.479896,30.4799,30.479957,30.480009,30.480052,30.480048,30.48003,30.48003,30.480004,30.479983,30.479922,30.479904,30.479848,30.479839,30.479753,30.479792,30.479848,30.479939,30.480069,30.480148,30.48049,30.481094,30.481879,30.482917,30.483342,30.483338,30.48408,30.484115,30.485664,30.48582,30.487057,30.487218,30.488437,30.48885,30.488845,30.488919,30.489123,30.489978,30.490282,30.490946,30.491484,30.491558,30.492483,30.492548,30.49332,30.494125,30.494123,30.494366,30.494692,30.495095,30.495768,30.495877,30.496667,30.496732,30.497491,30.497648,30.497882,30.498155,30.499132,30.49974,30.499965,30.500486,30.501415,30.502313,30.502839,30.503012,30.503494,30.503646,30.504084,30.50408,30.50428,30.504918,30.505122,30.505308,30.505373,30.505482,30.505655,30.505764,30.505825,30.505994,30.506146,30.506315,30.506415,30.506484,30.506558,30.506675,30.50678,30.506827,30.506862,30.506858,30.50684,30.506801,30.506766,30.506736,30.506862,30.507036,30.507296,30.507457,30.507556,30.507804,30.507943,30.50822,30.508984,30.509032,30.509041,30.509271,30.509579,30.510109,30.511319,30.511992,30.512144,30.512144,30.512179,30.512539,30.512691,30.512995,30.513407,30.514171,30.514787,30.515109,30.515273,30.515434,30.51556,30.515638,30.515838,30.515942,30.515964,30.515894,30.516089,30.516241,30.516476,30.516584,30.51661,30.516788,30.516884,30.516949,30.517543,30.517548,30.517704,30.517786,30.51796,30.518082,30.518129,30.518424,30.518602,30.518715,30.518793,30.519036,30.519071,30.519206,30.519249,30.519362,30.519449,30.519518,30.519679,30.520017,30.520078,30.5202,30.520243,30.520269,30.520404,30.520625,30.521102,30.521497,30.521675,30.52181,30.52224,30.522491,30.522839,30.523025,30.523251,30.523537,30.523637,30.52398,30.524184,30.524384,30.52441,30.524436,30.524614,30.52474,30.525039,30.525404,30.525543,30.525586,30.526011,30.526137,30.526263,30.526515,30.526563,30.526684,30.526888,30.527027,30.52773,30.528016,30.529245,30.529774,30.530521,30.531003,30.531059,30.531194,30.531298,30.531589,30.531688,30.532405,30.532869,30.53322,30.533459,30.533811,30.533924,30.534093,30.534818,30.535178,30.535273,30.535417,30.535972,30.536094,30.53615,30.536319,30.536432,30.53678,30.536814,30.536984,30.537049,30.53727,30.537296,30.537313,30.537344,30.537383,30.537413,30.537457,30.537574,30.53763,30.5377,30.537773,30.537869,30.537973,30.538837,30.539575,30.539731,30.539839,30.540408,30.540647,30.540838,30.541101,30.541293,30.541589,30.541788,30.541962,30.541988,30.542044,30.542135,30.542595,30.542643,30.542734,30.542938,30.543034,30.543108,30.543368,30.543516,30.543511,30.543767,30.544154,30.544306,30.544566,30.544757,30.545347,30.545417,30.545929,30.546155,30.546684,30.546905,30.547331,30.547817,30.547912,30.548012,30.548008,30.548368,30.548646,30.548859,30.549041,30.549184,30.549384,30.549609,30.550078,30.550126,30.550208,30.550616,30.550747,30.551003,30.551146,30.551636,30.551701,30.552522,30.552708,30.552843,30.55293,30.552977,30.553668,30.552999,30.552977,30.552891,30.552886,30.552756,30.552691,30.552548,30.552483,30.552374,30.552344,30.552292,30.552248,30.552036,30.551966,30.551953,30.551936,30.55184,30.551684,30.551597,30.551554,30.551497,30.551467,30.551441,30.551445,30.55148,30.551571,30.551645,30.55174,30.551845,30.552747,30.552977,30.553121,30.553238,30.553364,30.553542,30.554666,30.55589,30.556233,30.556554,30.556671,30.556667,30.557057,30.557135,30.557413,30.557552,30.557786,30.558181,30.558672,30.559227,30.559457,30.559839,30.560425,30.56049,30.561107,30.561849,30.562309,30.562509,30.563051,30.563464,30.563767,30.563963,30.564301,30.564392,30.564388,30.564644,30.565165,30.565608,30.566055,30.566128,30.566354,30.567166,30.56747,30.568368,30.568476,30.56848,30.568476,30.570108,30.570347,30.570595,30.570847,30.571007,30.571602,30.571716,30.572222,30.572556,30.573429,30.573542,30.57365,30.573755,30.573853,30.574062,30.57412,30.574167,30.574263,30.574331,30.574417,30.574497,30.574553,30.574558,30.574549,30.574532,30.574713,30.574753,30.574781,30.574804,30.574827,30.574892,30.574944,30.574949,30.574982,30.575056,30.575148,30.575265,30.575143,30.575217,30.575299,30.575347,30.575469,30.575582,30.575625,30.575686,30.575777,30.575807,30.575816,30.575903,30.575916,30.575929,30.576011,30.576042,30.576324,30.576437,30.576519,30.576619,30.576814,30.576923,30.577109,30.577135,30.577352,30.577474,30.5776,30.578056,30.578194,30.578316,30.578507,30.57868,30.579288,30.579596,30.579809,30.580035,30.580369,30.580486,30.581016,30.581063,30.581016,30.580521,30.580395,30.580369,30.580087,30.580022,30.579996,30.57997,30.579631,30.578511,30.578815,30.578812,30.578959,30.57902,30.579084,30.579554,30.579721,30.580004,30.580256,30.580256,30.580256,30.58102,30.581079,30.581129,30.581337,30.581589,30.5818,30.582083,30.58227,30.582943,30.583984,30.584197,30.584809,30.585022,30.585321,30.585321,30.585673,30.585699,30.585938,30.586259,30.586402,30.586558,30.586862,30.586923,30.587066,30.587205,30.587713,30.588134,30.588134,30.588155,30.588394,30.58875,30.589184,30.589201,30.589197,30.589314,30.589957,30.590082,30.590122,30.590304,30.590477,30.590833,30.591267,30.591319]


# print(xs.__len__())
# print(ys.__len__())


urlUpdate = "https://localhost:7198/BusInfo/UpdateBus"

# def update():

#     for i in range(xs.__len__()):
#         dataUpdate = {"bus_id":busID, "x":xs[i], "y":ys[i]}
#         resUpdate = requests.post(url=urlUpdate, headers=headers, data=json.dumps(dataUpdate), verify=False)
#         print(resUpdate.text)
#         time.sleep(0.1)


#     for i in range(xs.__len__() - 1, 0, -1):
#         dataUpdate = {"bus_id":busID, "x":xs[i], "y":ys[i]}
#         resUpdate = requests.post(url=urlUpdate, headers=headers, data=json.dumps(dataUpdate), verify=False)
#         print(resUpdate.text)
#         time.sleep(0.1)


def update(bus_n, pos):

    dataUpdate = {"bus_id": busIDs[bus_n], "x": xs[bus_n][pos % (
        bus_len[bus_n])], "y": ys[bus_n][pos % (bus_len[bus_n])]}
    resUpdate = requests.post(
        url=urlUpdate, headers=headers, data=json.dumps(dataUpdate), verify=False)
    print(bus[bus_n], xs[bus_n][pos % (bus_len[bus_n])], ys[bus_n][pos % (bus_len[bus_n])])


p = 0

while True:

    p = p + 10
    for i in range(bus_num):
        update(i, p)
    time.sleep(1)
